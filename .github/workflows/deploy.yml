# This is a basic workflow to help you get started with Actions

name: Deploy on isrpo server

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Create dir .ssh
        run: mkdir -p ~/.ssh
      - name: Create ssh key
        run: echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/id_ed25519
      - name: Edit chmod
        run: chmod 600 ~/.ssh/id_ed25519
      - name: Add host in .know_hosts
        run: ssh-keyscan -t ed25519 github.com >> ~/.ssh/known_hosts
      - name: Add key.pun to remote server 
        run: ssh-copy-id -i id_ed25519.pub ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}}
      - name: Creater archive 
        run: zip -r tracker.zip . 
      - name: Copy archive
        run: scp -v -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 ./tracker.zip ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}}:~/app

      # Runs a set of commands using the runners shell
      - name: Deploy on server
        run: |
          echo "Unzip archive"
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "cd
          ~/app; unzip tracker.zip; docker-compose up -d --build;"
